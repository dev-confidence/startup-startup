{"name":"Startup-startup","tagline":"StartUp a StartUp with a working example Continuous Integration & Delivery pipeline","body":"[![Build Status](https://travis-ci.org/dev-confidence/startup-startup.svg?branch=master)](https://travis-ci.org/dev-confidence/startup-startup)\r\n\r\n---\r\n\r\n# StartUp-StartUp\r\n\r\nThe aim of this project is to **StartUp** a **StartUp** with a working example `Continuous Integration & Delivery` pipeline.\r\n\r\n## Latest Technologies & Services used:\r\n\r\n* Github\r\n* Travis CI\r\n\r\n## Continuous Integration & Deployment\r\n\r\n1. Write Tests & Code (TDD)\r\n2. Commit & Push to Github for `Code Review` as Pull Request\r\n3. Other team member reviews Pull Request & comments accordingly\r\n4. Travis CI builds all branches (inc. Pull Requests) & runs all tests (unit, functional, acceptance) \r\n5. Coveralls runs `Code Coverage` report\r\n6. Scrutinizer runs `Static Code Analysis` report\r\n6. If `step 4` is **successful**: \r\n     a. Create Git Tag / Release on Github (these are release candidates)\r\n     b. Deploy Git Tag to `CI environment`\r\n7. Test on `CI environment`\r\n8. Deploy to `Test environment` from any `tag / release` as required\r\n\r\n![Continuous Delivery Diagram](https://raw.githubusercontent.com/dev-confidence/startup-startup/master/docs/img/continuous_delivery.png)\r\n\r\n[Continuous Delivery Diagram (original)](https://raw.githubusercontent.com/dev-confidence/startup-startup/master/docs/img/continuous_delivery.png)\r\n\r\n---\r\n\r\n## Overview\r\n\r\n### Automated testing & deployment\r\n\r\n* Codeception - testing framework\r\n    - [ ] Unit tests\r\n    - [ ] Functional tests\r\n    - [x] Acceptance tests\r\n* TravisCI - contiuous integration\r\n    - [ ] Unit tests\r\n    - [ ] Functional tests\r\n    - [ ] Acceptance tests\r\n    - [x] Continuous Tag (tag on successful build)\r\n    - [ ] Continuous delivery (deploy on successful build)\r\n* Coveralls - code coverage\r\n* EagleEye - dependency version\r\n* Scrutinizer - static code analysis\r\n* Deploy VM\r\n    - [ ] Amazon\r\n\r\n---\r\n\r\n## Running Application from Scratch\r\n\r\n### 1. Building Development Environment with Vagrant & SaltStack\r\n\r\n1a. Build VM\r\n\r\n```\r\nvagrant up\r\n```\r\n\r\nThis will take about 15mins depending on your internet connection.\r\n\r\nIt will install everything you need:\r\n\r\n* Ubuntu 12.04LTS (Linux)\r\n* PHP 5.5\r\n* Apache 2.4 with virtual host (vhost) for this project\r\n* Git\r\n* A few little extra tools (check salt/roots/salt for more details)\r\n\r\n---\r\n\r\n### 2. Running test suite\r\n\r\nBuild development environment from section above in 1 step with vagrant.\r\n\r\n2a. Download dependencies using `Composer`\r\n\r\n```\r\nphp composer.phar install\r\n```\r\n\r\n2b. Run test suite\r\n\r\n```\r\nvendor/bin/codecept run\r\n```\r\n\r\nExample output\r\n\r\n```\r\nvagrant@precise64:/var/www/dev-confidence/startup-startup$ vendor/bin/codecept run\r\nCodeception PHP Testing Framework v1.8.5\r\nPowered by PHPUnit 3.7.37 by Sebastian Bergmann.\r\n\r\nAcceptance Tests (3) ------------------------------------------------\r\nTrying to ensure that homepage works (HomepageCept.php)         Ok\r\nTrying to sign in (LoginCept.php)                               Ok\r\nTrying to ensure that user list page works (UserCept.php)       Ok\r\n---------------------------------------------------------------------\r\n\r\nFunctional Tests (0) ------------------------\r\n---------------------------------------------\r\n\r\nUnit Tests (0) ------------------------------\r\n---------------------------------------------\r\n\r\n\r\nTime: 285 ms, Memory: 9.50Mb\r\n\r\nOK (3 tests, 7 assertions)\r\n```\r\n\r\n### 3.Viewing Application\r\n\r\n3a. Got to url `http://localhost:8080`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}